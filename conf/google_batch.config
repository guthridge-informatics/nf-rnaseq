params {
    scratch            = "gs://memory-alpha/scratch"
    refs               = "gs://memory-alpha/references"
  
    project_id         = null
    location           = 'us-central1'
    workdir_bucket     = null

    //compute
    use_spot           = false
    boot_disk          = '50 GB'
    service_account    = null

    //networking
    use_private_ip     = false
    custom_vpc         = null
    custom_subnet      = null
}

workDir                = params.workdir_bucket

docker.enabled         = true

process {
    container          = 'nextflow/nextflow:latest'
    executor           = "google-batch"
    // errorStrategy   = { task.exitStatus==9 ? 'retry' : 'terminate' }
    maxRetries         = 1
    // machineType     = 'n2-highmem-4'
    withName: BBMAP_BBDUK {
        memory   = '24 GB'
        maxForks = 32
        cpus     = 12
    }
    withName: STAR_ALIGN {
        memory   = '64 GB'
        maxForks = 16
        cpus     = 8
        ext.args = 
            "--readFilesCommand zcat \
            --outSAMattributes All \
            --quantMode TranscriptomeSAM GeneCounts"
        publishDir = [
            path: { "${params.results}/aligned" },
            mode: 'copy',
            pattern: "*.bam"
        ]
    }
    withName: FASTQC {
        maxForks = 32
        cpus     = 3
        memory   = '2 GB'
    }
    withName: SALMON_QUANT {
        maxForks = 32
        cpus     = 6
        memory   = '4 GB'
        publishDir = [
            path: { "${params.results}/quant" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') || filename.endsWith('_meta_info.json') ? null : filename }
        ]
    }
    withName: MULTIQC {
        maxForks  = 32
        cpus      = 2
        memory    = '4 GB'
        publishDir = [
            path: { "${params.results}/qc" },
            mode: 'copy',
            pattern: "*.html"
        ]
    }
}

google {
    location                  = params.location
    project                   = params.project_id
    batch.network             = params.custom_vpc
    batch.subnetwork          = params.custom_subnet
    batch.usePrivateAddress   = params.use_private_ip
    batch.spot                = params.use_spot
    batch.serviceAccountEmail = params.service_account
    batch.bootDiskSize        = params.boot_disk
}