/*
 * -------------------------------------------------
 *  nf-isoseq Nextflow config file
 * -------------------------------------------------
 * Default config options for all environments.
 */

 params {
    reads_pattern    = "*_S*_L00*_R{1,2}_00*.fastq.gz"
    
    base                      = "/Volumes/guth_aci_informatics"
    refs                      = "${params.base}/references"
    genomic                   = "${params.refs}/genomic"
    species                   = "${params.genomic}/chimeras"
    sequences                 = "${params.species}/sequences"
    indices                   = "${params.species}/indices"
    miscellaneous             = "${params.refs}/miscellaneous"

    reference_sequences      = null
    gtf                      = "${params.sequences}/gencode_v32_transcripts_with_viruses_v1.2.gtf"
    fasta                    = "${params.sequences}/gencode_v32_transcripts_with_viruses_v1.2.fa"
    transcriptome            = ""
    star_index               = "${params.indices}/star"
    salmon_index             = "${params.indices}/salmon/gencode_v32_with_viruses_v1.2"
    chm13t2t                 = false
    pseudoalign              = false
    salmon_alignment_mode    = true // in what seems backwards, this keeps salmon_quant from trying to align the reads
    salmon_libtype           = "A"

    contaminants             = "${params.miscellaneous}/contaminants.fa.gz"
    // polyA                    = "${params.miscellaneous}/polyA.fa.gz"
    // truseq_adapter           = "${params.miscellaneous}/truseq.fa.gz"
    // truseq_rna_adapter       = "${params.miscellaneous}/truseq_rna.fa.gz"
    // rRNAs                    = "${params.miscellaneous}/human_ribosomal.fa"

    // default project input and output locations
    project                   = "${params.base}/project"
    raw_data                  = "${params.project}/data/raw_data"
    bcls                      = "${params.raw_data}/bcls"
    raw_fastqs                = "${params.raw_data}/fastqs"
    
    results                   = "${params.project}/results"
    qc                        = "${params.results}/qc"
    trimmed                   = "${params.results}/trimmed"
    aligned                   = "${params.results}/aligned"
    quant                     = "${params.results}/quant"

    logs                      = "${params.project}/logs"
    
    bbmap_xmx                 = "64g"
    memory                 = 128
    cpus                   = 16
    time                   = '240.h'

    results          = "results"
    logs             = "./logs"
    help             = false
    monochrome_logs  = false
}

manifest {
  description     = 'Nextflow RNAseq pipeline'
  author          = 'Miles Smith <miles-smith@omrf.org>'
  mainScript      = 'main.nf'
  nextflowVersion = '>=20.04.1'
  version         = '1.1.1'
}

tower {
  enabled = true
}

timeline {
  enabled = true
  file    = "${params.logs}/execution_timeline.html"
}

report {
  enabled = true
  file    = "${params.logs}/execution_report.html"
}

trace {
  enabled   = true
  file      = "${params.logs}/execution_trace.txt"
  overwrite = true
}

dag {
  enabled   = true
  file      = "${params.logs}/pipeline_dag.svg"
  overwrite = true
}

/* 
 * defines execution profiles for different environments  
 */ 

profiles {
  standard {
    // process.container   = 'nextflow/rnaseq-nf:latest'
    trace.overwrite        = true
    process.executor       = 'local'
    singularity.enabled    = false
    docker.enabled         = true
  }
  
  slurm {
    // process.container   = 'nextflow/nextflow:latest'
    process {
      module         = 'singularity'
      executor       = 'slurm'
       
      queue          = "serial"
      cpus           = 4
      memory         = 64
      queueSize      = 30
    
      withName: BBMAP_BBDUK {
        memory   = "32 GB"
        maxForks = 32
        cpus     = 4
      }
      withName: STAR_ALIGN {
        memory   = 64
        maxForks = 16
        cpus     = 8
        ext.args = 
          "--readFilesCommand zcat \
          --outSAMattributes All \
          --quantMode TranscriptomeSAM GeneCounts"
        publishDir = [
          path: { "${params.results}/aligned" },
          mode: 'copy',
          pattern: "*.bam"
        ]
      }
      withName: FASTQC {
        maxForks = 32
        cpus     = 2
        memory   = 8
      }
      withName: SALMON_QUANT {
        maxForks = 32
        cpus     = 4
        memory   = 32.GB
        publishDir = [
          path: { "${params.results}/quant" },
          mode: 'copy',
          pattern: "*"
        ]
      }
      withName: MULTIQC {
        maxForks  = 32
        cpus      = 4
        memory    = 32
        publishDir = [
          path: { "${params.results}/qc" },
          mode: 'copy',
          pattern: "*.html"
        ]
      }
    }
    docker.enabled  = false
    singularity {
        enabled    = true
        autoMounts = true
        runOptions = "--bind /Volumes/guth_aci_informatics/"
    }
  }
  

  gcp {
    workDir                = 'gs://memory-beta/nextflow'
    docker.enabled         = true
    process.container      = 'nextflow/nextflow:22.10.6'
    process.executor       = 'google-pipelines'
    process.machineType    = 'n1-highmem-4'
    process.cpus           = 4
    google.region          = 'us-central1'
  }  

  conda {
    process.conda          = "${params.project}/conda.yml"
  }

  docker {
    process.module         = "docker"
    process.container      = 'nextflow/nextflow:latest'
  }
}